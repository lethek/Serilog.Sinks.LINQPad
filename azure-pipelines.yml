trigger:
  batch: true
  branches:
    include:
    - main
    - master
  tags:
    include:
    - v*

pool:
  vmImage: 'windows-latest'

steps:
- task: gitversion/setup@0
  displayName: Setup GitVersion
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: Execute GitVersion
  inputs:
    additionalArguments: '/output BuildServer'

- task: UseDotNet@2
  displayName: 'Use .NET 6 SDK'
  inputs:
    packageType: 'sdk'
    version: '6.x'

- task: NuGetAuthenticate@0

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) --collect "Code Coverage" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
    nobuild: true

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj;!**/*Tests/*.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.NuGetVersion'

- task: DotNetCoreCLI@2
  displayName: Push
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet'
    versioningScheme: byEnvVar
    versionEnvVar: 'GitVersion.NuGetVersion'
